                                                  Assignment 9
                                                      CIS 11
1.) Briefly describe the concept of "Stack Frame"

Concept of a Stack Frame is one part of the stack that is put to the side to be used for storing local variable, saved    registers, subroutine return addresses, and passing arguments. It then executes whatever is pushed onto that specific piece of the stack.

2.) Briefly describe the concept of a "Calling Convention"

Calling Convention is describing how the code that you call is handled. In what order everything is organized, how things such as parameters are passed and how they return a result.

3.) Why do the book examples always start functions with "push ebp" and "mov ebp,esp"

It creates a new stack frame which allows for additional elements to be pushed into the stack and not stop the stack from working.

4.) What is the x64 equivalent to "push ebp" and "mov ebp,esp)" 

push rbp
mov rbp, rsp

5.) What are the differences between "Microsoft x64 calling convention" and "System V AMD64 ABI calling convention"

The differences are that Microsoft x64 has 32 bytes of shadow space on the stack that System V does not. However, System V can take more parameters and then put them into registers. The registers are different between the two calling conventions. Also the differences between the two are in the order that parameters are passed, allocated, put into registers or on the stack.

6.)  Upon entry to myFunction (above), what does the stack look like when using Microsoft x64 calling convention?

a would go into RCX, b into RDX, c into r8, d into r9, and e and f would be pushed onto the stack.

7.) Upon entry to myFunction (above), what does the stack look like when using stdcall convention 

The stack would take them in reverse order so f would be in RCX, e in RDX, d in r8, c in r9, b and a would be passed onto the stack.
